CREATE TABLE students(
student_id INT PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(100),
gender ENUM('Male','Female','Other'),
contact_info VARCHAR(255)
);
INSERT INTO students(name,gender,contact_info) VALUES
 ('alagu','Female','alagu@gmail.com'),
 ('priya','Female','priya@gmail.com'),
 ('dharsh','Female','dharsh@gmail.com'),
 ('pavi','Female','pavi@gmail.com'),
 ('mani','Male','mani@gmail.com'),
 ('bala','Male','bala@gmail.com'),
 ('sundar','Male','sundar@gmail.com'),
 ('vihaan','Male','vihaan@gmail.com');

select * from students;
+------------+--------+--------+------------------+
| student_id | name   | gender | contact_info     |
+------------+--------+--------+------------------+
|          1 | alagu  | Female | alagu@gmail.com  |
|          2 | priya  | Female | priya@gmail.com  |
|          3 | dharsh | Female | dharsh@gmail.com |
|          4 | pavi   | Female | pavi@gmail.com   |
|          5 | mani   | Male   | mani@gmail.com   |
|          6 | bala   | Male   | bala@gmail.com   |
|          7 | sundar | Male   | sundar@gmail.com |
|          8 | vihaan | Male   | vihaan@gmail.com |
+------------+--------+--------+------------------+

CREATE TABLE genres(
genre_id INT PRIMARY KEY AUTO_INCREMENT,
genre_name VARCHAR(50)
);

INSERT INTO genres (genre_name) VALUES 
('Action'),
('Adventure'),
('Comedy'),
('Drama'),
('Fantasy'),
('Horror'),
('Mystery'),
('Love'),
('Thriller');

select * from genres;
+----------+------------+
| genre_id | genre_name |
+----------+------------+
|        1 | Action     |
|        2 | Adventure  |
|        3 | Comedy     |
|        4 | Drama      |
|        5 | Fantasy    |
|        6 | Horror     |
|        7 | Mystery    |
|        8 | Love       |
|        9 | Thriller   |
+----------+------------+

CREATE TABLE student_movie_interests(
student_id INT,
genre_id INT,
PRIMARY KEY(student_id,genre_id),
FOREIGN KEY (student_id) REFERENCES students(student_id),
FOREIGN KEY (genre_id) REFERENCES genres(genre_id)
);

INSERT INTO student_movie_interests VALUES (1,3),(4,5),(1,8),(5,7),(2,9),(8,1),(6,3),(3,6),(7,2),(7,4),(5,8);

select * from student_movie_interests ;
+------------+----------+
| student_id | genre_id |
+------------+----------+
|          8 |        1 |
|          7 |        2 |
|          1 |        3 |
|          6 |        3 |
|          7 |        4 |
|          4 |        5 |
|          3 |        6 |
|          5 |        7 |
|          1 |        8 |
|          5 |        8 |
|          2 |        9 |
+------------+----------+

CREATE TABLE shopping_malls(
mall_id INT PRIMARY KEY AUTO_INCREMENT,
mall_name VARCHAR(100),
location VARCHAR(100)
);
INSERT INTO shopping_malls (mall_name, location) VALUES
('Brookefields Mall', 'Coimbatore'),
('Prozone Mall', 'Coimbatore'),
('Fun Republic Mall', 'Coimbatore'),
('Phoenix Marketcity', 'Chennai'),
('Spencer Plaza', 'Chennai');


select * from shopping_malls;
+---------+--------------------+------------+
| mall_id | mall_name          | location   |
+---------+--------------------+------------+
|       1 | Brookefields Mall  | Coimbatore |
|       2 | Prozone Mall       | Coimbatore |
|       3 | Fun Republic Mall  | Coimbatore |
|       4 | Phoenix Marketcity | Chennai    |
|       5 | Spencer Plaza      | Chennai    |
+---------+--------------------+------------+


CREATE TABLE beaches(
beach_id INT PRIMARY KEY AUTO_INCREMENT,
beach_name VARCHAR(100),
location VARCHAR(100)
);

INSERT INTO beaches (beach_name, location) VALUES
('Kovalam Beach', 'Thiruvananthapuram'),
('Varkala Beach', 'Varkala'),
('Cherai Beach', 'Kochi'),
('Alappuzha Beach', 'Alappuzha'),
('Marina Beach', 'Chennai'),
('Mahabalipuram Beach', 'Mahabalipuram'),
('Thiruchendur Beach', 'Thiruchendur'),
('Kanyakumari Beach', 'Kanyakumari');

select * from beaches;
+----------+---------------------+--------------------+
| beach_id | beach_name          | location           |
+----------+---------------------+--------------------+
|        1 | Kovalam Beach       | Thiruvananthapuram |
|        2 | Varkala Beach       | Varkala            |
|        3 | Cherai Beach        | Kochi              |
|        4 | Alappuzha Beach     | Alappuzha          |
|        5 | Marina Beach        | Chennai            |
|        6 | Mahabalipuram Beach | Mahabalipuram      |
|        7 | Thiruchendur Beach  | Thiruchendur       |
|        8 | Kanyakumari Beach   | Kanyakumari        |
+----------+---------------------+--------------------+


CREATE TABLE movies(
movie_id INT PRIMARY KEY AUTO_INCREMENT,
movie_name VARCHAR(100),
hero_name VARCHAR(100),
heroine_name VARCHAR(100)
);
INSERT INTO movies (movie_name, hero_name, heroine_name) VALUES
('Leo', 'Vijay', 'Trisha'),
('Jailer', 'Rajinikanth', 'Ramya Krishnan'),
('GBU', 'Ajith Kumar', 'Trisha'),
('Maanaadu', 'Silambarasan', 'Kalyani Priyadarshan'),
('Varisu', 'Vijay', 'Rashmika Mandanna'),
('Don', 'Sivakarthikeyan', 'Priyanka Mohan'),
('Love Today', 'Pradeep Ranganathan', 'Ivana'),
('Doctor', 'Sivakarthikeyan', 'Priyanka Arul Mohan'),
('Master', 'Vijay', 'Malavika Mohanan'),
('Kaithi', 'Karthi', 'No Heroine'),
('Bigil', 'Vijay', 'Nayanthara'),
('Mark Antony', 'Vishal', 'Ritu Varma');

select * from movies;
+----------+-------------+---------------------+----------------------+
| movie_id | movie_name  | hero_name           | heroine_name         |
+----------+-------------+---------------------+----------------------+
|        1 | Leo         | Vijay               | Trisha               |
|        2 | Jailer      | Rajinikanth         | Ramya Krishnan       |
|        3 | GBU         | Ajith Kumar         | Trisha               |
|        4 | Maanaadu    | Silambarasan        | Kalyani Priyadarshan |
|        5 | Varisu      | Vijay               | Rashmika Mandanna    |
|        6 | Don         | Sivakarthikeyan     | Priyanka Mohan       |
|        7 | Love Today  | Pradeep Ranganathan | Ivana                |
|        8 | Doctor      | Sivakarthikeyan     | Priyanka Mohan       |
|        9 | Master      | Vijay               | Malavika Mohan       |
|       10 | Kaithi      | Karthi              | No Heroine           |
|       11 | Bigil       | Vijay               | Nayanthara           |
|       12 | Mark Antony | Vishal              | Ritu Varma           |
+----------+-------------+---------------------+----------------------+



CREATE TABLE student_favorites(
  student_id INT PRIMARY KEY,
  favorite_actor VARCHAR(100),
  favorite_actress VARCHAR(100),
  FOREIGN KEY (student_id) REFERENCES students(student_id)
);
INSERT INTO student_favorites (student_id, favorite_actor, favorite_actress) VALUES
(1, 'Vijay', 'Nayanthara'),
(2, 'Ajith Kumar', 'Trisha Krishnan'),
(3, 'Suriya', 'Jyothika'),
(4, 'Dhanush', 'Amala Paul'),
(5, 'Vikram', 'Samantha Ruth Prabhu'),
(6, 'Sivakarthikeyan', 'Keerthy Suresh'),
(7, 'Vijay Sethupathi', 'Aishwarya Rajesh'),
(8, 'Silambarasan (Simbu)', 'Hansika Motwani');

select * from student_favorites;
+------------+----------------------+----------------------+
| student_id | favorite_actor       | favorite_actress     |
+------------+----------------------+----------------------+
|          1 | Vijay                | Nayanthara           |
|          2 | Ajith Kumar          | Trisha Krishnan      |
|          3 | Suriya               | Jyothika             |
|          4 | Dhanush              | Amala Paul           |
|          5 | Vikram               | Samantha Ruth Prabhu |
|          6 | Sivakarthikeyan      | Keerthy Suresh       |
|          7 | Vijay Sethupathi     | Aishwarya Rajesh     |
|          8 | Silambarasan (Simbu) | Hansika Motwani      |
+------------+----------------------+----------------------+

CREATE TABLE student_fav_malls(
student_id INT,
mall_id INT,
PRIMARY KEY(student_id,mall_id),
FOREIGN KEY (student_id) REFERENCES students(student_id),
FOREIGN KEY (mall_id) REFERENCES shopping_malls(mall_id)
);

INSERT INTO student_fav_malls VALUES (8,5),(3,5),(2,4),(1,2),(3,1),(7,1),(6,2),(5,3),(4,2),(6,3);
select * from student_fav_malls;
+------------+---------+
| student_id | mall_id |
+------------+---------+
|          3 |       1 |
|          7 |       1 |
|          1 |       2 |
|          4 |       2 |
|          6 |       2 |
|          5 |       3 |
|          6 |       3 |
|          2 |       4 |
|          3 |       5 |
|          8 |       5 |
+------------+---------+

CREATE TABLE student_fav_beaches(
student_id INT,
beach_id INT,
PRIMARY KEY(student_id,beach_id),
FOREIGN KEY (student_id) REFERENCES students(student_id),
FOREIGN KEY (beach_id) REFERENCES beaches(beach_id)
);
INSERT INTO student_fav_beaches VALUES(8,8),(7,2),(5,3),(8,6),(5,8),(4,6),(1,5),(3,8),(6,3);

select * from student_fav_beaches;
+------------+----------+
| student_id | beach_id |
+------------+----------+
|          7 |        2 |
|          5 |        3 |
|          6 |        3 |
|          1 |        5 |
|          4 |        5 |
|          6 |        5 |
|          4 |        6 |
|          8 |        6 |
|          3 |        8 |
|          5 |        8 |
|          8 |        8 |
+------------+----------+


CREATE TABLE students_fav_movies(
student_id INT,
movie_id INT,
PRIMARY KEY(student_id,movie_id),
FOREIGN KEY (student_id) REFERENCES students(student_id),
FOREIGN KEY (movie_id) REFERENCES movies(movie_id)
);
INSERT INTO students_fav_movies VALUES (8,12),(7,10),(7,3),(5,8),(4,9),(6,3),(1,11),(2,5),(3,2),(5,1);

select * from students_fav_movies;
+------------+----------+
| student_id | movie_id |
+------------+----------+
|          5 |        1 |
|          3 |        2 |
|          6 |        3 |
|          7 |        3 |
|          2 |        5 |
|          5 |        8 |
|          4 |        9 |
|          7 |       10 |
|          1 |       11 |
|          4 |       11 |
|          6 |       11 |
|          3 |       12 |
|          8 |       12 |
+------------+----------+





SELECT s.name AS student_name , g.genre_name FROM student_movie_interests smi
    -> join students s on s.student_id=smi.student_id 
    -> join genres g on g.genre_id=smi.genre_id;
+--------------+------------+
| student_name | genre_name |
+--------------+------------+
| alagu        | Comedy     |
| alagu        | Love       |
| priya        | Thriller   |
| dharsh       | Horror     |
| pavi         | Fantasy    |
| mani         | Mystery    |
| mani         | Love       |
| bala         | Comedy     |
| sundar       | Adventure  |
| sundar       | Drama      |
| vihaan       | Action     |
+--------------+------------+

                                                                  ***** who share similar movie genres *****
SELECT g.genre_name, 
GROUP_CONCAT(s.name ORDER BY s.name) AS students_who_like_genre
FROM student_movie_interests sfm
JOIN genres g ON g.genre_id = sfm.genre_id
JOIN students s ON s.student_id = sfm.student_id
GROUP BY g.genre_name;

+------------+-------------------------+
| genre_name | students_who_like_genre |
+------------+-------------------------+
| Action     | vihaan                  |
| Adventure  | sundar                  |
| Comedy     | alagu,bala              |
| Drama      | sundar                  |
| Fantasy    | pavi                    |
| Horror     | dharsh                  |
| Love       | alagu,mani              |
| Mystery    | mani                    |
| Thriller   | priya                   |
+------------+-------------------------+

                                                             *****Group students by favorite actors or actresses *****

SELECT favorite_actor AS actor_name,
GROUP_CONCAT(s.name ORDER BY s.name) AS students_who_like_actor
FROM student_favorites sf
JOIN students s ON s.student_id = sf.student_id
GROUP BY favorite_actor;

+----------------------+-------------------------+
| actor_name           | students_who_like_actor |
+----------------------+-------------------------+
| Ajith Kumar          | priya                   |
| Dhanush              | pavi                    |
| Silambarasan (Simbu) | vihaan                  |
| Sivakarthikeyan      | bala                    |
| Suriya               | dharsh                  |
| Vijay                | alagu                   |
| Vijay Sethupathi     | sundar                  |
| Vikram               | mani                    |
+----------------------+-------------------------+

                                                      ***** who share similar tastes in entertainment and hangout spots *****

SELECT 
    GROUP_CONCAT(s.name) AS student_names,
    sm.mall_name,
    b.beach_name,
    m.movie_name
FROM students s
JOIN student_fav_malls sfm ON s.student_id = sfm.student_id 
JOIN student_fav_beaches sfb ON s.student_id = sfb.student_id 
JOIN students_fav_movies sfmv ON s.student_id = sfmv.student_id 

JOIN shopping_malls sm ON sm.mall_id = sfm.mall_id
JOIN beaches b ON b.beach_id = sfb.beach_id
JOIN movies m ON m.movie_id = sfmv.movie_id

GROUP BY sfm.mall_id, sfb.beach_id, sfmv.movie_id
having count(s.student_id)>1;

+-----------------+---------------+-------------------+-------------+
| student_names   | mall_name     | beach_name        | movie_name  |
+-----------------+---------------+-------------------+-------------+
| alagu,bala,pavi | Prozone Mall  | Marina Beach      | Bigil       |
| vihaan,dharsh   | Spencer Plaza | Kanyakumari Beach | Mark Antony |
+-----------------+---------------+-------------------+-------------+


                                                                       ***** Common favorite beaches *****

SELECT s1.name AS student_1,
s2.name AS student_2,b.beach_name
FROM student_fav_beaches b1
JOIN student_fav_beaches b2
ON b1.beach_id = b2.beach_id AND b1.student_id<b2.student_id
join students s1 on s1.student_id=b1.student_id
join students s2 ON s2.student_id = b2.student_id
join beaches b on b.beach_id = b1.beach_id;

+-----------+-----------+---------------------+
| student_1 | student_2 | beach_name          |
+-----------+-----------+---------------------+
| mani      | bala      | Cherai Beach        |
| alagu     | pavi      | Marina Beach        |
| alagu     | bala      | Marina Beach        |
| pavi      | bala      | Marina Beach        |
| pavi      | vihaan    | Mahabalipuram Beach |
| dharsh    | mani      | Kanyakumari Beach   |
| dharsh    | vihaan    | Kanyakumari Beach   |
| mani      | vihaan    | Kanyakumari Beach   |
+-----------+-----------+---------------------+


                                                                        ***** common favorites malls *****
SELECT s1.name AS student_1 , s2.name AS student_2, m.mall_name
from student_fav_malls m1
join student_fav_malls m2 
on m1.mall_id=m2.mall_id AND m1.student_id<m2.student_id
join students s1 on s1.student_id=m1.student_id
join students s2 on s2.student_id=m2.student_id
join shopping_malls m on m.mall_id=m1.mall_id;

+-----------+-----------+-------------------+
| student_1 | student_2 | mall_name         |
+-----------+-----------+-------------------+
| dharsh    | sundar    | Brookefields Mall |
| alagu     | pavi      | Prozone Mall      |
| alagu     | bala      | Prozone Mall      |
| pavi      | bala      | Prozone Mall      |
| mani      | bala      | Fun Republic Mall |
| dharsh    | vihaan    | Spencer Plaza     |
+-----------+-----------+-------------------+
                                                                       ***** common favorite movies *****

select s1.name AS student_1,s2.name AS student_2,m.movie_name
from students_fav_movies m1
join students_fav_movies m2 on m1.movie_id = m2.movie_id AND m1.student_id < m2.student_id
join students s1 on s1.student_id = m1.student_id
join students s2 on s2.student_id = m2.student_id
join movies m on m.movie_id = m1.movie_id;

+-----------+-----------+-------------+
| student_1 | student_2 | movie_name  |
+-----------+-----------+-------------+
| bala      | sundar    | GBU         |
| alagu     | pavi      | Bigil       |
| alagu     | bala      | Bigil       |
| pavi      | bala      | Bigil       |
| dharsh    | vihaan    | Mark Antony |
+-----------+-----------+-------------+


                                                             ***** Favorite actor and actress *****

 select Group_concat(s.name) AS students ,sf.favorite_actor, Count(*) as likes from student_favorites sf
 join students s on s.student_id = sf.student_id
 group by sf.favorite_actor
 order by likes desc
 limit 1;

+-------------+----------------+-------+
| students    | favorite_actor | likes |
+-------------+----------------+-------+
| alagu,priya | Vijay          |     2 |
+-------------+----------------+-------+

 select favorite_actress , count(*) As likes from student_favorites
 group by favorite_actress
order by likes desc limit 1;
+------------------+-------+
| favorite_actress | likes |
+------------------+-------+
| Trisha Krishnan  |     2 |
+------------------+-------+

                                                           ***** Most popular genre among the class *****
select group_concat(s.name) As student,g.genre_name, count(*) As interested_students from student_movie_interests smi
join students s on s.student_id = smi.student_id
join genres g on g.genre_id = smi.genre_id
group by g.genre_name 
order by interested_students desc limit 2;

+------------+------------+---------------------+
| student    | genre_name | interested_students |
+------------+------------+---------------------+
| alagu,bala | Comedy     |                   2 |
| alagu,mani | Love       |                   2 |
+------------+------------+---------------------+

                                                          ***** Top 5 favorites movies currently *****

select m.movie_name , count(*) as favorites
from students_fav_movies sf
join movies m on sf.movie_id = m.movie_id
group by m.movie_name
order by favorites desc,m.movie_name
limit 5;
+-------------+-----------+
| movie_name  | favorites |
+-------------+-----------+
| Bigil       |         3 |
| GBU         |         2 |
| Mark Antony |         2 |
| Doctor      |         1 |
| Jailer      |         1 |
+-------------+-----------+

                                                               ***** Who loves romantic genres *****

select s1.name AS student_name,g.genre_name from student_movie_interests smi
join students s1 on s1.student_id=smi.student_id
join genres g  on g.genre_id = smi.genre_id where g.genre_name='love';

+--------------+------------+
| student_name | genre_name |
+--------------+------------+
| alagu        | Love       |
| mani         | Love       |
+--------------+------------+

                                                                     ***** Most popular beaches *****

select b.beach_name , COUNT(sfb.student_id) AS total_likes
from student_fav_beaches sfb
join beaches b on b.beach_id = sfb.beach_id
GROUP BY b.beach_id ,sfb.beach_id;

+---------------------+-------------+
| beach_name          | total_likes |
+---------------------+-------------+
| Varkala Beach       |           1 |
| Cherai Beach        |           2 |
| Marina Beach        |           3 |
| Mahabalipuram Beach |           2 |
| Kanyakumari Beach   |           3 |
+---------------------+-------------+


select b.beach_name , COUNT(sfb.student_id) AS total_likes
from student_fav_beaches sfb
join beaches b on b.beach_id = sfb.beach_id
GROUP BY b.beach_id ,sfb.beach_id 
order by total_likes desc limit 1;

+-------------------+-------------+
| beach_name        | total_likes |
+-------------------+-------------+
| Kanyakumari Beach |           3 |
+-------------------+-------------+

                                                             ***** top favorite actors *****
select favorite_actor , COUNT(student_id) AS total_count
from student_favorites 
GROUP BY favorite_actor;

+----------------------+-------------+
| favorite_actor       | total_count |
+----------------------+-------------+
| Ajith Kumar          |           1 |
| Dhanush              |           1 |
| Silambarasan (Simbu) |           1 |
| Sivakarthikeyan      |           1 |
| Suriya               |           1 |
| Vijay                |           1 |
| Vijay Sethupathi     |           1 |
| Vikram               |           1 |
+----------------------+-------------+

select favorite_actor , COUNT(student_id) AS total_count
from student_favorites 
GROUP BY favorite_actor
 limit 3; 

+----------------------+-------------+
| favorite_actor       | total_count |
+----------------------+-------------+
| Ajith Kumar          |           1 |
| Dhanush              |           1 |
| Silambarasan (Simbu) |           1 |
+----------------------+-------------+
                                                           ***** movie can most people agree on watching together *****


select m.movie_name , COUNT(sfm.student_id) AS total_likes
from students_fav_movies sfm
join movies m on m.movie_id = sfm.movie_id
GROUP BY movie_name;
+-------------+-------------+
| movie_name  | total_likes |
+-------------+-------------+
| Bigil       |           3 |
| Doctor      |           1 |
| GBU         |           2 |
| Jailer      |           1 |
| Kaithi      |           1 |
| Leo         |           1 |
| Mark Antony |           2 |
| Master      |           1 |
| Varisu      |           1 |
+-------------+-------------+


select m.movie_name, group_concat(s.name) AS students
from students_fav_movies sfm
join movies m on m.movie_id = sfm.movie_id
join students s on s.student_id =sfm.student_id
Group BY m.movie_name;
+-------------+-----------------+
| movie_name  | students        |
+-------------+-----------------+
| Bigil       | alagu,pavi,bala |
| Doctor      | mani            |
| GBU         | sundar,bala     |
| Jailer      | dharsh          |
| Kaithi      | sundar          |
| Leo         | mani            |
| Mark Antony | vihaan,dharsh   |
| Master      | pavi            |
| Varisu      | priya           |
+-------------+-----------------+

 





